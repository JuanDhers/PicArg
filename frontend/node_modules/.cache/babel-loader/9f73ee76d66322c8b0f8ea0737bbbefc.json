{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juand\\\\Desktop\\\\fotoarg\\\\frontend\\\\src\\\\components\\\\FotosEditorModals.js\";\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { faEnvelopeOpenText } from '@fortawesome/free-solid-svg-icons';\nimport SweetAlert from 'sweetalert2';\n\nconst FotosEditorModals = props => {\n  //Decalaración de las variables de estado\n  const [fotoTitulo, setFotoTitulo] = useState('');\n  const [fotoPrecio, setFotoPrecio] = useState('');\n  const [fotoImage, setFotoImage] = useState('');\n  const [previewFotoImage, setpreviewFotoImage] = useState('');\n  const [fotoCategory, setFotoCategory] = useState(''); //es velue del control. \n\n  const [categorias, setCategorias] = useState([{\n    id: '',\n    nombre: 'Todas'\n  }]); //Carga las categorias\n\n  useEffect(() => {\n    fetch('http://localhost:8888/categorias').then(response => response.json()).then(dataCategorias => {\n      setCategorias(dataCategorias);\n    });\n  }, []);\n\n  const categoriasOptions = () => {\n    let categories = categorias.map(categoria => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: categoria.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, categoria.nombre);\n    });\n    return categories;\n  };\n\n  const handleCategoriChange = event => {\n    setFotoCategory(event.target.value);\n  };\n\n  const handleFotoNameChange = event => {\n    //para saber que evento llama a la función \n    setFotoTitulo(event.target.value); //toma el valor cada vez que cambia la caja de texto y lo pone dentro de la variable de estado.\n  }; //recibe el evento onChange evento \n\n\n  const handleFotoPrecioChange = event => {\n    //para saber que evento llama a la función \n    setFotoPrecio(event.target.value); //toma el valor se qeda con la primera foto y lo pone dentro de la variable de estado.\n  };\n\n  const handleFotoImageChange = event => {\n    //para saber que evento llama a la función \n    setFotoImage(event.target.files[0]); //toma el valor cada vez que cambia la caja de texto y lo pone dentro de la variable de estado.\n\n    setpreviewFotoImage(URL.createObjectURL(event.target.files[0])); //obtengo el archivo aue se esta por cargar \n    //URL.createObjectURL crea el objeto con la \n    //dirección que recibe de event.target\n  }; //envio de la carga de la foto, manda a guardar.\n\n\n  const handleSave = () => {\n    const formData = new FormData(); //recibe el paquete con el titulo, el precio y la imagen.\n\n    formData.append('fotoTitulo', fotoTitulo);\n    formData.append('fotoPrecio', fotoPrecio);\n    formData.append('fotoImage', fotoImage);\n    formData.append('fotoCategory', fotoCategory);\n    let url = 'http://localhost:8888/fotos'; //url que se le pasa al fetch\n\n    let method = 'POST'; //aca pregunto si ya tiene idPhoto, de ser así se implementa un put para que se cambie.\n    //la funcionalidad put esta implementada en el back src/routes/fotos_routes\n\n    if (props.idPhoto) {\n      url += '/' + props.idPhoto; // le paso a la url el producto que se quiere editar\n\n      method = 'PUT'; //le paso el method para hacer un cambio no una insercion\n    }\n\n    fetch(url, {\n      method: method,\n      body: formData,\n      credentials: 'include'\n    }).then(response => response.json()).then(data => {\n      //si el estado de carga es ok da mensaje de carga correcta\n      if (data.status === 'ok') {\n        //llama a la función onFotoSaved que esta en el padre (ListadoFotos), \n        //para que se cierre el modal si se cargo ok\n        // pasa también como el mesanje de carga ok.\n        props.onFotoSaved(data.message);\n      } // en caso de error avisa.\n      else {\n          SweetAlert.fire({\n            text: data.message,\n            icon: 'error'\n          });\n        }\n    }).catch(error => {\n      console.log('Error!!!');\n    });\n  }; //Esta función lo que hace es diferenciar si una foto se esta cargando o se esta modificando\n  //props.idPhoto viene de listadoFotos\n\n\n  useEffect(() => {\n    if (props.idPhoto) {\n      //uso el endpoint\n      fetch(`http://localhost:8888/fotos/` + props.idPhoto).then(response => response.json()).then(data => {\n        setFotoTitulo(data.titulo);\n        setFotoPrecio(data.usuario);\n        setFotoImage('');\n        setpreviewFotoImage(data.foto);\n        setFotoCategory(data.categoria);\n      });\n    } else {\n      //setea todos los campos del modal para que esten en blanco cuando se va cargar una imagen\n      setFotoTitulo('');\n      setFotoPrecio('');\n      setFotoImage('');\n      setpreviewFotoImage('');\n      setFotoCategory('');\n    }\n  }, [props.idPhoto] // hace que vuelva a cargar solo si se cambia el id de producto -\n  ); //RETORNO DE FOTOS EDITOR MODAL\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: props.show,\n    onHide: props.handleHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Publicaci\\xF3n\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, \"Titulo\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: fotoTitulo,\n    onChange: handleFotoNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, \"Descripcion\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: fotoPrecio,\n    onChange: handleFotoPrecioChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, previewFotoImage && /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      height: \"25vh\"\n    },\n    src: previewFotoImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, \"Categorias\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: handleCategoriChange,\n    value: fotoCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, categoriasOptions())), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"imagen\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"file\",\n    onChange: handleFotoImageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: handleSave // cuando hacen click llama a ala función que guarda el estado.\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"Subir\")));\n};\n\nexport default FotosEditorModals;","map":{"version":3,"sources":["C:/Users/juand/Desktop/fotoarg/frontend/src/components/FotosEditorModals.js"],"names":["React","useState","useEffect","Modal","Form","Button","faEnvelopeOpenText","SweetAlert","FotosEditorModals","props","fotoTitulo","setFotoTitulo","fotoPrecio","setFotoPrecio","fotoImage","setFotoImage","previewFotoImage","setpreviewFotoImage","fotoCategory","setFotoCategory","categorias","setCategorias","id","nombre","fetch","then","response","json","dataCategorias","categoriasOptions","categories","map","categoria","handleCategoriChange","event","target","value","handleFotoNameChange","handleFotoPrecioChange","handleFotoImageChange","files","URL","createObjectURL","handleSave","formData","FormData","append","url","method","idPhoto","body","credentials","data","status","onFotoSaved","message","fire","text","icon","catch","error","console","log","titulo","usuario","foto","show","handleHide","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { faEnvelopeOpenText } from '@fortawesome/free-solid-svg-icons';\r\nimport SweetAlert from 'sweetalert2';\r\n\r\nconst FotosEditorModals = (props) =>{\r\n\r\n//Decalaración de las variables de estado\r\nconst [fotoTitulo, setFotoTitulo] =useState('');\r\nconst [fotoPrecio, setFotoPrecio] = useState('');\r\nconst [fotoImage, setFotoImage] = useState('');\r\nconst [previewFotoImage, setpreviewFotoImage] = useState('');\r\n\r\nconst [fotoCategory, setFotoCategory] = useState('');//es velue del control. \r\nconst [categorias, setCategorias] = useState([{id:'', nombre:'Todas'}]);\r\n\r\n\r\n//Carga las categorias\r\nuseEffect(()=>{\r\n    fetch('http://localhost:8888/categorias')\r\n    .then( response => response.json()\r\n    ).then(\r\n        dataCategorias =>{\r\n            setCategorias(dataCategorias);\r\n        }\r\n    )\r\n}, [])\r\n\r\n\r\nconst categoriasOptions = ()=>{\r\n    let categories = categorias.map( categoria =>{\r\n        return (\r\n            <option value={categoria.id}>\r\n                {categoria.nombre}\r\n            </option>\r\n        )\r\n    }) \r\n\r\n    return categories;\r\n}\r\n\r\nconst handleCategoriChange = (event)=>{\r\n    setFotoCategory(event.target.value);\r\n}\r\n\r\n\r\n\r\nconst handleFotoNameChange = (event)=>{\r\n    //para saber que evento llama a la función \r\n       setFotoTitulo (event.target.value);//toma el valor cada vez que cambia la caja de texto y lo pone dentro de la variable de estado.\r\n    }\r\n\r\n//recibe el evento onChange evento \r\nconst handleFotoPrecioChange = (event)=>{\r\n//para saber que evento llama a la función \r\n   setFotoPrecio (event.target.value);//toma el valor se qeda con la primera foto y lo pone dentro de la variable de estado.\r\n}\r\n\r\n\r\nconst handleFotoImageChange = (event)=>{\r\n     //para saber que evento llama a la función \r\n      setFotoImage (event.target.files[0]);//toma el valor cada vez que cambia la caja de texto y lo pone dentro de la variable de estado.\r\n       \r\n      setpreviewFotoImage(URL.createObjectURL(event.target.files[0])); //obtengo el archivo aue se esta por cargar \r\n                                                                        //URL.createObjectURL crea el objeto con la \r\n                                                                        //dirección que recibe de event.target\r\n        }\r\n\r\n\r\n    //envio de la carga de la foto, manda a guardar.\r\nconst handleSave = () =>{\r\n   const formData = new FormData(); //recibe el paquete con el titulo, el precio y la imagen.\r\n\r\n   formData.append('fotoTitulo', fotoTitulo);\r\n   formData.append('fotoPrecio', fotoPrecio);\r\n   formData.append('fotoImage', fotoImage);\r\n   formData.append('fotoCategory', fotoCategory);\r\n\r\n   let url = 'http://localhost:8888/fotos'; //url que se le pasa al fetch\r\n   let method = 'POST';\r\n\r\n   //aca pregunto si ya tiene idPhoto, de ser así se implementa un put para que se cambie.\r\n   //la funcionalidad put esta implementada en el back src/routes/fotos_routes\r\n    if(props.idPhoto){\r\n        url += '/' + props.idPhoto; // le paso a la url el producto que se quiere editar\r\n        method = 'PUT'; //le paso el method para hacer un cambio no una insercion\r\n    }\r\n   fetch(url, {\r\n       method: method,\r\n       body: formData,  \r\n       credentials: 'include'\r\n   })\r\n   .then( response => response.json() )\r\n   .then( data => {\r\n       //si el estado de carga es ok da mensaje de carga correcta\r\n       if(data.status === 'ok'){\r\n           //llama a la función onFotoSaved que esta en el padre (ListadoFotos), \r\n           //para que se cierre el modal si se cargo ok\r\n           // pasa también como el mesanje de carga ok.\r\n           props.onFotoSaved(data.message)\r\n       }\r\n       // en caso de error avisa.\r\n       else{\r\n        SweetAlert.fire({\r\n            text: data.message,\r\n            icon: 'error'\r\n        })\r\n       }\r\n   })\r\n   .catch( error => {\r\n       console.log('Error!!!');\r\n   })\r\n}\r\n\r\n//Esta función lo que hace es diferenciar si una foto se esta cargando o se esta modificando\r\n//props.idPhoto viene de listadoFotos\r\nuseEffect(\r\n    ()=>{\r\n        if (props.idPhoto){\r\n            //uso el endpoint\r\n            fetch(`http://localhost:8888/fotos/` + props.idPhoto).then(\r\n                response => response.json()\r\n            ).then(\r\n                data =>{\r\n                    setFotoTitulo(data.titulo);\r\n                    setFotoPrecio(data.usuario);\r\n                    setFotoImage('');\r\n                    setpreviewFotoImage(data.foto);\r\n                    setFotoCategory(data.categoria);\r\n                }\r\n            )\r\n\r\n        }\r\n        else{\r\n            //setea todos los campos del modal para que esten en blanco cuando se va cargar una imagen\r\n            setFotoTitulo('');\r\n            setFotoPrecio('');\r\n            setFotoImage('');\r\n            setpreviewFotoImage('');\r\n            setFotoCategory('');\r\n        }\r\n    },[props.idPhoto]// hace que vuelva a cargar solo si se cambia el id de producto -\r\n)\r\n\r\n//RETORNO DE FOTOS EDITOR MODAL\r\nreturn(\r\n\r\n    <Modal show={props.show} onHide={props.handleHide}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Publicación</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Titulo</Form.Label>\r\n\r\n                    <Form.Control \r\n                                type=\"text\"\r\n                                value={fotoTitulo}\r\n                                onChange={handleFotoNameChange}\r\n                                />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Descripcion</Form.Label>\r\n\r\n                    <Form.Control \r\n                                type=\"text\"\r\n                                value={fotoPrecio}\r\n                                onChange={handleFotoPrecioChange}\r\n                                />\r\n                </Form.Group>\r\n                {/* Previsualización de la imgena a cargar */}\r\n                <Form.Group className=\"d-flex justify-content-center\">\r\n                    {previewFotoImage && \r\n                    <img style={{height: \"25vh\"}} src={previewFotoImage}/>\r\n                    }\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Categorias</Form.Label>\r\n                    <Form.Control  as=\"select\"\r\n                                    onChange={handleCategoriChange}\r\n                                    value={fotoCategory}>\r\n\r\n                        {categoriasOptions()}\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>imagen</Form.Label>\r\n\r\n                    <Form.Control   type=\"file\"\r\n                                    onChange={handleFotoImageChange}\r\n                                />\r\n                </Form.Group>\r\n\r\n            </Form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\">\r\n                Cancelar\r\n            </Button>\r\n\r\n            <Button variant=\"success\"\r\n                    onClick ={handleSave}// cuando hacen click llama a ala función que guarda el estado.\r\n                    >\r\n                Subir\r\n            </Button>\r\n\r\n        </Modal.Footer>\r\n\r\n    </Modal>\r\n);\r\n}\r\n\r\nexport default FotosEditorModals"]},"metadata":{},"sourceType":"module"}