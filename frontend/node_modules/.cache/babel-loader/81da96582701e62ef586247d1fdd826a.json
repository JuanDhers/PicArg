{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juand\\\\Desktop\\\\picarg\\\\frontend\\\\src\\\\components\\\\LoginModals.js\";\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport SweetAlert from 'sweetalert2';\n\nconst LoginModals = props => {\n  //funcion que maneja el envio del inicio de sesión\n  const handleLoginClick = () => {\n    //defino la dirección del servidor\n    let url = 'http://localhost:8888/auth'; //los recibe los parametros y van a ser pasados a altributo body del fetch\n\n    let params = {\n      user: nombreUsuario,\n      password: password\n    }; //fetch hasta la url\n    //recibe como parametros el metodo por el cual se va a hacer el login\n\n    fetch(url, {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify(params),\n      headers: {\n        'content-type': 'application/json' //acá tuve un error de tipeo \n        //y no recibia el parametro\n\n      }\n    }).then(response => response.json()).then(data => {\n      //verifico el status del login\n      if (data.status === 'ok') {\n        props.handleLoginSuccess(data.loggedUser); //lo recibe de session_routes\n        //llama a la funcion handleHide declarada en NavigationBar para que se cierre el modal\n\n        props.handleHide();\n      } else {\n        SweetAlert.fire({\n          text: data.message,\n          icon: 'error'\n        }); // alert(data.message); \n      }\n    });\n  };\n\n  const [nombreUsuario, setNombreUsuario] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleUserNameChange = event => {\n    setNombreUsuario(event.target.value); //event.target.value pone en setNombreUsuario\n    // el valor que se escribe en la caja de texto de nombre de usuario\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value); //event.target.value pone en setPassword\n    // el valor que se escribe en la caja de texto de nombre de usuario\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    size: \"sm\",\n    show: props.show,\n    onHide: props.handleHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Iniciar Sesi\\xF3n\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Nombre de Usuario\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: nombreUsuario,\n    onChange: handleUserNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Contrase\\xF1a\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    value: password,\n    onChange: handlePasswordChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\" //recibe el valor desde navigationBar\n    ,\n    onClick: props.handleHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\" //onClcik recibe la funcion que se encarga de manejar el aceptar.\n    ,\n    onClick: handleLoginClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Ingresar\")));\n};\n\nexport default LoginModals; //","map":{"version":3,"sources":["C:/Users/juand/Desktop/picarg/frontend/src/components/LoginModals.js"],"names":["React","useState","Modal","Button","Form","SweetAlert","LoginModals","props","handleLoginClick","url","params","user","nombreUsuario","password","fetch","method","credentials","body","JSON","stringify","headers","then","response","json","data","status","handleLoginSuccess","loggedUser","handleHide","fire","text","message","icon","setNombreUsuario","setPassword","handleUserNameChange","event","target","value","handlePasswordChange","show"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport SweetAlert from 'sweetalert2';\r\n\r\nconst LoginModals = (props)=>{\r\n\r\n    //funcion que maneja el envio del inicio de sesión\r\n    const handleLoginClick = ()=>{\r\n\r\n        //defino la dirección del servidor\r\n        let url = 'http://localhost:8888/auth';\r\n\r\n        //los recibe los parametros y van a ser pasados a altributo body del fetch\r\n        let params = {\r\n            user: nombreUsuario,\r\n            password: password\r\n        };\r\n\r\n        //fetch hasta la url\r\n        //recibe como parametros el metodo por el cual se va a hacer el login\r\n        fetch(url, {\r\n                method : 'POST',\r\n                credentials : 'include',\r\n                body: JSON.stringify( params),\r\n                headers: {\r\n                            'content-type' : 'application/json' //acá tuve un error de tipeo \r\n                                                                //y no recibia el parametro\r\n                         }\r\n                    }\r\n            ).then( response => response.json()\r\n            ).then( data => {\r\n                //verifico el status del login\r\n                if( data.status === 'ok'){\r\n                    props.handleLoginSuccess(data.loggedUser);//lo recibe de session_routes\r\n                    //llama a la funcion handleHide declarada en NavigationBar para que se cierre el modal\r\n                     props.handleHide();\r\n                }\r\n                else{\r\n                    SweetAlert.fire({\r\n                        text: data.message,\r\n                        icon: 'error'\r\n                    })\r\n                    // alert(data.message); \r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        const [nombreUsuario, setNombreUsuario] = useState('');\r\n\r\n        const [password, setPassword] = useState('');\r\n\r\n        const handleUserNameChange =(event)=>{\r\n            setNombreUsuario(event.target.value);//event.target.value pone en setNombreUsuario\r\n                                                // el valor que se escribe en la caja de texto de nombre de usuario\r\n        }\r\n\r\n        const handlePasswordChange =(event)=>{\r\n            setPassword(event.target.value);//event.target.value pone en setPassword\r\n                                                // el valor que se escribe en la caja de texto de nombre de usuario\r\n        }\r\n\r\n\r\n    return(\r\n        <Modal size=\"sm\" show={props.show} onHide={props.handleHide}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Iniciar Sesión</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form.Group>\r\n                    <Form.Label>Nombre de Usuario</Form.Label>\r\n                    <Form.Control   type=\"text\"       \r\n                                    value={nombreUsuario}\r\n                                    onChange={handleUserNameChange}\r\n                                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Contraseña</Form.Label>\r\n                    <Form.Control   type=\"password\"\r\n                                    value={password}\r\n                                    onChange={handlePasswordChange}\r\n                                    />\r\n                </Form.Group>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\"\r\n                //recibe el valor desde navigationBar\r\n                onClick={props.handleHide}>Cancelar</Button>\r\n\r\n                <Button variant=\"primary\"\r\n                        //onClcik recibe la funcion que se encarga de manejar el aceptar.\r\n                        onClick={handleLoginClick}\r\n                        \r\n                        >Ingresar</Button>\r\n            </Modal.Footer>\r\n\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default LoginModals;\r\n\r\n//"]},"metadata":{},"sourceType":"module"}